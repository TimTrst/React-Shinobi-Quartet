[{"C:\\GIT\\react\\supertrumpf\\src\\index.tsx":"1","C:\\GIT\\react\\supertrumpf\\src\\App.tsx":"2","C:\\GIT\\react\\supertrumpf\\src\\admin\\Form.tsx":"3","C:\\GIT\\react\\supertrumpf\\src\\admin\\Form.styles.ts":"4","C:\\GIT\\react\\supertrumpf\\src\\game\\Shinobi.ts":"5","C:\\GIT\\react\\supertrumpf\\src\\admin\\validationSchema.tsx":"6"},{"size":178,"mtime":1608631189057,"results":"7","hashOfConfig":"8"},{"size":2309,"mtime":1610353468786,"results":"9","hashOfConfig":"8"},{"size":2312,"mtime":1610353468794,"results":"10","hashOfConfig":"8"},{"size":645,"mtime":1610353468792,"results":"11","hashOfConfig":"8"},{"size":661,"mtime":1610353468952,"results":"12","hashOfConfig":"8"},{"size":675,"mtime":1610353468804,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xopfr0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\GIT\\react\\supertrumpf\\src\\index.tsx",[],["29","30"],"C:\\GIT\\react\\supertrumpf\\src\\App.tsx",["31","32","33","34","35","36"],"C:\\GIT\\react\\supertrumpf\\src\\admin\\Form.tsx",["37"],"import React from \"react\";\r\nimport useCardAdmin from './useCardAdmin';\r\nimport { Label, Row, Form, Error, Field} from './Form.styles';\r\nimport Shinobi from \"../game/Shinobi\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport validationSchema from \"./validationSchema\"; \r\n\r\ninterface Props{\r\n    onSubmit: (shinobi: Shinobi) => void;\r\n    shinobi?: Shinobi;\r\n}\r\n\r\nexport default function From({ onSubmit,shinobi = new Shinobi('', '', '', '', '', '', ''),}: Props) {\r\n    //const [shinobi, changeProperty] = useCardAdmin(initialShinobi);\r\n    return (\r\n      <Formik\r\n        initialValues={shinobi}\r\n        validationSchema= {validationSchema}\r\n        onSubmit={(e, actions) => {\r\n          onSubmit(e!);\r\n          actions.setSubmitting(false);\r\n          onSubmit(shinobi);\r\n        }}\r\n      >\r\n        {({isSubmitting, errors, setFieldValue}) =>(\r\n          <Form>\r\n            <Row>\r\n              <Label htmlFor=\"name\">Name:</Label>\r\n              <Field\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                className={errors.name && \"error\"}\r\n              />\r\n              <ErrorMessage name=\"name\" component={Error}/>\r\n            </Row>\r\n            <Row>\r\n              <Label htmlFor=\"image\">Bild:</Label>\r\n              <input type=\"file\" id=\"image\" onChange={event => {setFieldValue(\"image\", event.currentTarget.files![0])}}/>      \r\n              <ErrorMessage name =\"image\" component={Error} />\r\n            </Row>\r\n            {(Object.keys(Shinobi.properties) as (keyof Shinobi)[]).map(property => {\r\n              return (\r\n                <Row key={property}>\r\n                  <Label htmlFor={property}>\r\n                    {Shinobi.properties[property].label}:\r\n                  </Label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    id={property}\r\n                    name={property}\r\n                    className={errors[property] && \"error\"}\r\n                  />\r\n                  <ErrorMessage name={property} component={Error} />\r\n                </Row>\r\n              );\r\n              }\r\n            )}\r\n            <div>\r\n              <button type=\"submit\" disabled={isSubmitting}>speichern</button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n  ","C:\\GIT\\react\\supertrumpf\\src\\admin\\Form.styles.ts",["38"],"import styled, {css} from \"styled-components\";\r\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\r\n\r\nexport const Form = styled(FormikForm)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    div {\r\n        padding: 3px;\r\n    }   \r\n`;\r\n\r\nexport const Field = styled(FormikField)`\r\n    &.error {\r\n        border: 1px solid red;\r\n    }\r\n`;\r\n\r\n\r\nexport const Label = styled.label`\r\n    width: 120px;\r\n    display: inline-block;\r\n`;\r\nexport const Row = styled.div`\r\n        &:nth-child(2n) {\r\n        background-color: #ccc;\r\n    }       \r\n`;\r\n\r\nexport const Error = styled.div`\r\n  color: red;\r\n`;\r\n","C:\\GIT\\react\\supertrumpf\\src\\game\\Shinobi.ts",[],"C:\\GIT\\react\\supertrumpf\\src\\admin\\validationSchema.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":16},{"ruleId":"43","severity":1,"message":"48","line":7,"column":8,"nodeType":"45","messageId":"46","endLine":7,"endColumn":13},{"ruleId":"43","severity":1,"message":"49","line":10,"column":8,"nodeType":"45","messageId":"46","endLine":10,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":71,"column":9,"nodeType":"52","messageId":"53","endLine":84,"endColumn":11},{"ruleId":"54","severity":1,"message":"55","line":71,"column":9,"nodeType":"52","messageId":"56","endLine":84,"endColumn":11},{"ruleId":"43","severity":1,"message":"57","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":20},{"ruleId":"43","severity":1,"message":"58","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":20},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'Game' is defined but never used.","Identifier","unusedVar","'DarkMode' is defined but never used.","'Login' is defined but never used.","'Shinobi' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","'useCardAdmin' is defined but never used.","'css' is defined but never used.","no-global-assign","no-unsafe-negation"]