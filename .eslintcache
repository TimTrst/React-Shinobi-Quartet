[{"C:\\GIT\\react\\supertrumpf\\src\\index.tsx":"1","C:\\GIT\\react\\supertrumpf\\src\\App.tsx":"2","C:\\GIT\\react\\supertrumpf\\src\\DarkMode.tsx":"3","C:\\GIT\\react\\supertrumpf\\src\\Game.tsx":"4","C:\\GIT\\react\\supertrumpf\\src\\Card.tsx":"5","C:\\GIT\\react\\supertrumpf\\src\\useCards.tsx":"6","C:\\GIT\\react\\supertrumpf\\src\\Shinobi.ts":"7","C:\\GIT\\react\\supertrumpf\\src\\selectRandomProperty.tsx":"8"},{"size":170,"mtime":1608558272761,"results":"9","hashOfConfig":"10"},{"size":635,"mtime":1608629608085,"results":"11","hashOfConfig":"10"},{"size":113,"mtime":1608623301179,"results":"12","hashOfConfig":"10"},{"size":1504,"mtime":1608629425734,"results":"13","hashOfConfig":"10"},{"size":2023,"mtime":1608629656415,"results":"14","hashOfConfig":"10"},{"size":4147,"mtime":1608629589374,"results":"15","hashOfConfig":"10"},{"size":609,"mtime":1608558865683,"results":"16","hashOfConfig":"10"},{"size":281,"mtime":1608628572691,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1xopfr0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\GIT\\react\\supertrumpf\\src\\index.tsx",[],["36","37"],"C:\\GIT\\react\\supertrumpf\\src\\App.tsx",[],"C:\\GIT\\react\\supertrumpf\\src\\DarkMode.tsx",[],"C:\\GIT\\react\\supertrumpf\\src\\Game.tsx",["38","39","40"],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './Game.css';\r\nimport Card from './Card';\r\nimport useCards from \"./useCards\";\r\n\r\ninterface Props{\r\n    title: string;\r\n}\r\n\r\nexport default function Game({ title } : Props) {   \r\n    const [state, play] = useCards();\r\n    return(\r\n        <>\r\n            <h1>{title}</h1>\r\n            <div className =\"info\">\r\n                {state.playersTurn ? 'Your turn' : 'Computers turn'}\r\n            </div>\r\n            <div className = \"cards\"> \r\n            {state.player[0] && (\r\n                <Card \r\n                    shinobi={state.player[0]}                                             //Übergeben der Karte mit Values an die Card Klasse!\r\n                    uncovered= {true}                                                    //Aufgedeckt?\r\n                    selectedProperty={state.selectedProperty}                                  //Welche Zeile der Karte wurde gewählt?\r\n                    onSelectedProperty={play}     \r\n                 //remove = {remove}\r\n                 />\r\n            )}\r\n            {state.computer[0] &&(\r\n                <Card \r\n                    shinobi={state.computer[0]} \r\n                    uncovered={state.computerUncovered}\r\n                    selectedProperty={state.selectedProperty}\r\n                //onSelectedProperty={this.getSlectedPropertyHandler.bind(this)()} \r\n                />\r\n             )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\GIT\\react\\supertrumpf\\src\\Card.tsx",["41"],"C:\\GIT\\react\\supertrumpf\\src\\useCards.tsx",["42","43"],"C:\\GIT\\react\\supertrumpf\\src\\Shinobi.ts",[],"C:\\GIT\\react\\supertrumpf\\src\\selectRandomProperty.tsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},{"ruleId":"48","severity":1,"message":"52","line":1,"column":26,"nodeType":"50","messageId":"51","endLine":1,"endColumn":35},{"ruleId":"48","severity":1,"message":"53","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":17},{"ruleId":"48","severity":1,"message":"53","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":17},{"ruleId":"48","severity":1,"message":"54","line":8,"column":11,"nodeType":"50","messageId":"51","endLine":8,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":48,"column":8,"nodeType":"57","endLine":48,"endColumn":32,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'compare'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [compare, state.selectedProperty]",{"range":"64","text":"65"},[1259,1283],"[compare, state.selectedProperty]"]